1. Describe the problem generics address.
Generics allow you to delay the specification of the data type of programming elements in a class or a method, until it is actually used in the program. In other words, generics allow you to write a class or method that can work with any data type
2. How would you create a list of strings, using the generic List class?
List is a generic class and is defined in the System.Collections.Generic namespace. We must import this namespace in your project to access the List<T> class.
Then we can use any of the method as follows to create a list of string:
1)list<string> myList = new list<string>(2);  myList.Add(“item1”); myList.Add(“item2”)
2)var myList = new list<string>() {“item1”, “item2”}
3. How many generic type parameters does the Dictionary class have?
Dictionary<TKey,TValue> generic type has two type parameters, TKey and TValue , that represent the types of its keys and values.
4. True/False. When a generic class has multiple type parameters, they must all match.
False.

5. What method is used to add items to a List object?
1) List.Add() Method: The Add method adds an item to a List.
2) List.AddRange() Method: The AddRange method is used to add a collection of items.
6. Name two methods that cause items to be removed from a List.
1) List.Remove(item)
2)List.RemoveAt(index)
7. How do you indicate that a class has a generic type parameter?
Generic classes are defined using a type parameter in an angle brackets after the class name.
8. True/False. Generic classes can only have one generic type parameter.
False
9. True/False. Generic type constraints limit what can be used for the generic type.
True
10. True/False. Constraints let you use the methods of the thing you are constraining to.
False.
